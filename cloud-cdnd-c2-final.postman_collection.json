{
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [""],
        "type": "text/javascript"
      }
    },
    {
      "listen": "test",
      "script": {
        "exec": [""],
        "type": "text/javascript"
      }
    }
  ],
  "info": {
    "_exporter_id": "24806226",
    "_postman_id": "9f5064c0-88b8-4170-8246-7b2aa558e4ee",
    "name": "cloud-cdnd-c2-final",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"404 status is valid\",()=>{",
              "    pm.response.to.be.error;",
              "    pm.response.to.have.status(404)",
              "})",
              "",
              "pm.test(\"404 response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.jsonBody()",
              "    pm.expect(pm.response.json()).to.be.equal(\"The Image from the provided url was not found!\")",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "404",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "https://timedotcom.files.wordpress.com/2019/03/kitten-report.jpg"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=https://timedotcom.files.wordpress.com/2019/03/kitten-report.jpg"
        }
      },
      "response": []
    },
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Malformed image url status is valid\",()=>{",
              "    pm.response.to.be.error;",
              "    pm.response.to.have.status(400)",
              "})",
              "",
              "pm.test(\"Malformed image url response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.jsonBody()",
              "    pm.expect(pm.response.json()).to.be.equal(\"Invalid url\")",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "400 - malformed url",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "www.google.com"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=www.google.com"
        }
      },
      "response": []
    },
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Malformed image url status is valid\",()=>{",
              "    pm.response.to.be.error;",
              "    pm.response.to.have.status(400)",
              "})",
              "",
              "pm.test(\"Malformed image url response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.jsonBody()",
              "    pm.expect(pm.response.json()).to.be.equal(\"The provided url does not link to an image. the content type is text/html; charset=UTF-8\")",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "400 - url dosn't link to image",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "https://commons.wikimedia.org/wiki/File:Lamborghini_Veneno.jpg"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=https://commons.wikimedia.org/wiki/File:Lamborghini_Veneno.jpg"
        }
      },
      "response": []
    },
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Malformed image url status is valid\",()=>{",
              "    pm.response.to.be.error;",
              "    pm.response.to.have.status(400)",
              "})",
              "",
              "pm.test(\"Malformed image url response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.jsonBody()",
              "    pm.expect(pm.response.json()).to.be.equal(\"Image not supported! The image format is: \\\"svg+xml\\\". The supported image formats are: bmp | gif | jpeg | png | tiff.\")",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "400 - unsupported image",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "https://httpbin.org/image/svg"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=https://httpbin.org/image/svg"
        }
      },
      "response": []
    },
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Malformed image url status is valid\",()=>{",
              "    pm.response.to.be.error;",
              "    pm.response.to.have.status(500)",
              "})",
              "",
              "pm.test(\"Malformed image url response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.jsonBody()",
              "    pm.expect(pm.response.json()).to.be.equal(\"The server hosting the Image from the provided url has encountered an internal error.\")",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "500",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "https://httpbin.org/status/500"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=https://httpbin.org/status/500"
        }
      },
      "response": []
    },
    {
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Succcessful request status test\",()=>{",
              "    pm.response.to.be.ok",
              "    pm.response.to.have.status(200)",
              "})",
              "",
              "pm.test(\"Malformed image url response is valid\",()=>{",
              "    pm.response.to.be.withBody",
              "    pm.response.to.have.header(\"Content-Type\", \"image/jpeg\");",
              "})"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "name": "successful request",
      "request": {
        "header": [],
        "method": "GET",
        "url": {
          "host": ["{{BASE_URL}}"],
          "path": ["filteredimage"],
          "query": [
            {
              "key": "image_url",
              "value": "https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
            }
          ],
          "raw": "{{BASE_URL}}/filteredimage?image_url=https://upload.wikimedia.org/wikipedia/commons/b/bd/Golden_tabby_and_white_kitten_n01.jpg"
        }
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "HOST",
      "type": "string",
      "value": "localhost:8080"
    }
  ]
}
